<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.openvidu</groupId>
		<artifactId>openvidu-parent</artifactId>
		<version>2.0.0</version>
	</parent>

	<artifactId>openvidu-server</artifactId>
	<packaging>jar</packaging>

	<name>OpenVidu Server</name>
	<version>2.28.0-EM-SNAPSHOT</version>
	<description>OpenVidu Server</description>
	<url>https://openvidu.io</url>

	<licenses>
		<license>
			<name>Apache 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<organization>
		<name>OpenVidu</name>
		<url>https://github.com/OpenVidu/openvidu</url>
	</organization>

	<scm>
		<url>${openvidu.scm.url}</url>
		<connection>scm:git:${openvidu.scm.connection}</connection>
		<developerConnection>scm:git:${openvidu.scm.connection}</developerConnection>
		<tag>develop</tag>
	</scm>

	<developers>
		<developer>
			<id>openvidu.io</id>
			<name>-openvidu.io Community</name>
			<organization>OpenVidu</organization>
			<organizationUrl>https://openvidu.io</organizationUrl>
		</developer>
	</developers>

	<properties>
		<!-- Main class -->
		<start-class>io.openvidu.server.OpenViduServer</start-class>
	</properties>

	<profiles>

		<profile>
			<id>exec</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>false</filtering>
					</resource>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>banner.txt</include>
						</includes>
					</resource>
				</resources>

				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<version>${version.spring-boot}</version>
						<configuration>
							<mainClass>${start-class}</mainClass>
							<layout>ZIP</layout>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>build-info</goal>
									<goal>repackage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${version.exec.plugin}</version>
						<configuration>
							<mainClass>${start-class}</mainClass>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>${version.enforcer.plugin}</version>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${version.surefire.plugin}</version>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>dependency</id>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>false</filtering>
					</resource>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>banner.txt</include>
						</includes>
					</resource>
				</resources>

				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<version>${version.spring-boot}</version>
						<configuration>
							<mainClass>${start-class}</mainClass>
							<layout>ZIP</layout>
							<classifier>exec</classifier>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>build-info</goal>
									<goal>repackage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>{version.exec.plugin}</version>
						<configuration>
							<mainClass>${start-class}</mainClass>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>${version.enforcer.plugin}</version>
					</plugin>
				</plugins>
			</build>

		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>4.3.0</version>
				<configuration>
					<generatorName>java</generatorName>
					<!-- See more at: https://openapi-generator.tech/docs/generators/java/ -->
					<configOptions>
						<sourceFolder>openapi</sourceFolder>
						<dateLibrary>java8</dateLibrary>
						<java8>true</java8>
						<hideGenerationTimestamp>true</hideGenerationTimestamp>
					</configOptions>
					<output>target/generated-sources</output>
					<generateApis>false</generateApis>
					<generateApiTests>false</generateApiTests>
					<generateApiDocumentation>false</generateApiDocumentation>
					<generateModelTests>false</generateModelTests>
					<generateModelDocumentation>false</generateModelDocumentation>
					<generateSupportingFiles>false</generateSupportingFiles>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<id>allApi</id>
						<configuration>
							<inputSpec>${basedir}/src/main/resources/restApi.yaml</inputSpec>
							<modelPackage>io.openvidu.server.utils.dockermanager.model</modelPackage>
							<library>jersey2</library>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Generated sources -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>add-openapi-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/openapi</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.kurento</groupId>
			<artifactId>kurento-jsonrpc-server</artifactId>
			<version>${version.kurento}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-websocket</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-websocket</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.openvidu</groupId>
			<artifactId>openvidu-client</artifactId>
			<version>${version.openvidu.client}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.kurento</groupId>
			<artifactId>kurento-client</artifactId>
			<version>${version.kurento}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>${version.spring-boot}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
			<version>${version.spring-boot}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
			<version>${version.spring-boot}</version>
		</dependency>
		<dependency>
			<groupId>com.github.docker-java</groupId>
			<artifactId>docker-java</artifactId>
			<version>${version.dockerjava}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<version>${version.janino}</version>
		</dependency>
		<dependency>
			<groupId>io.openvidu</groupId>
			<artifactId>openvidu-java-client</artifactId>
			<version>${version.openvidu.java.client}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-artifact</artifactId>
			<version>${version.maven.artifact}</version>
		</dependency>

		<!-- Rest API interface dependencies -->
		<!-- https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit -->
		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>retrofit</artifactId>
			<version>2.9.0</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>converter-jackson</artifactId>
			<version>2.9.0</version>
		</dependency>

		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>0.2.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-annotations -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.6.2</version>
		</dependency>

		<!-- end of Rest API interface dependencies -->

		<!-- Test dependencies -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${version.spring-boot}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.skyscreamer</groupId>
					<artifactId>jsonassert</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.openvidu</groupId>
			<artifactId>openvidu-test-browsers</artifactId>
			<version>${version.openvidu.test.browsers}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>${version.powermock}</version>
			<scope>test</scope>
		</dependency>

		<!-- Test dependencies -->

	</dependencies>

</project>